import asyncio
from typing import Dict, Set
import json


class SSEManager:
    """
    –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏ SSE.
    –•—Ä–∞–Ω–∏—Ç –æ—á–µ—Ä–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """

    def __init__(self):
        # user_id -> set of queues –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.connections: Dict[int, Set[asyncio.Queue]] = {}

    async def add_connection(self, user_id: int, queue: asyncio.Queue):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id not in self.connections:
            self.connections[user_id] = set()
        self.connections[user_id].add(queue)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è user_id: {user_id}")

    async def remove_connection(self, user_id: int, queue: asyncio.Queue):
        """–£–¥–∞–ª—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if user_id in self.connections:
            self.connections[user_id].discard(queue)
            if not self.connections[user_id]:
                del self.connections[user_id]
            print(f"‚ùå –£–¥–∞–ª–µ–Ω–æ SSE –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è user_id: {user_id}")

    async def send_event(self, user_id: int, event: dict):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        if user_id in self.connections:
            event_json = json.dumps(event)
            for queue in self.connections[user_id]:
                await queue.put(event_json)
            print(f"üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ user_id {user_id}: {event['type']}")


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
sse_manager = SSEManager()